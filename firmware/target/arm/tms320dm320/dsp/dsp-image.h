#ifndef DSP_IMAGE
#define DSP_IMAGE
/*
 * Automatically generated by xml2h.py from ./build/dsp-image.out.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 * MA 02111-1307 USA
 *
 */
static const unsigned short _section_text[] = {
    0x4a11, 0x60f8, 0x05b9, 0x0001, 0xfa30, 0x008d, 0xf495, 0xeefe, 
    0x60f8, 0x05b9, 0x0002, 0xf820, 0x00a2, 0x7711, 0x0054, 0x6881, 
    0xfffe, 0xf074, 0x02f3, 0xe800, 0x75f8, 0x0008, 0x8006, 0x76f8, 
    0x05b6, 0x0000, 0x76f8, 0x05b5, 0x0000, 0x76f8, 0x05b7, 0x0000, 
    0xf073, 0x010f, 0x10f8, 0x05b6, 0x08f8, 0x05b4, 0xf844, 0x00b3, 
    0x76f8, 0x05b6, 0x0000, 0x76f8, 0x0560, 0x0002, 0x76f8, 0x05ba, 
    0x0001, 0xf074, 0x025d, 0x10f8, 0x05ba, 0xf844, 0x010f, 0x10f8, 
    0x05b4, 0x00f8, 0x05b5, 0x08f8, 0x05b6, 0x8811, 0xf495, 0x7710, 
    0x1000, 0xf6a9, 0xf820, 0x00ca, 0xf020, 0x1000, 0xf273, 0x00ce, 
    0x08f8, 0x05b5, 0x10f8, 0x05b4, 0x08f8, 0x05b6, 0x80f8, 0x05b7, 
    0xf6b8, 0x10f8, 0x05b8, 0xf000, 0x8000, 0x6ff8, 0x05b5, 0x0c1f, 
    0x75f8, 0x0008, 0x8002, 0xe800, 0x75f8, 0x0008, 0x8003, 0x10f8, 
    0x05b2, 0xf1ef, 0xf3e1, 0x10f8, 0x05b3, 0xf2a0, 0x00f8, 0x05b6, 
    0x4e00, 0xf020, 0xffff, 0x5700, 0xf280, 0x75f8, 0x0008, 0x8000, 
    0x5600, 0xf0f0, 0x75f8, 0x0008, 0x8001, 0xe800, 0x75f8, 0x05b7, 
    0x8004, 0x75f8, 0x0008, 0x8005, 0xe801, 0x74f8, 0x0562, 0x8006, 
    0x74f8, 0x0563, 0x8001, 0x74f8, 0x0564, 0x8000, 0x74f8, 0x0565, 
    0x8003, 0x74f8, 0x0566, 0x8002, 0x75f8, 0x0008, 0x8006, 0xee02, 
    0x8a11, 0xfc00, 0xf495, 0x4a08, 0x4a09, 0x4a0a, 0x4a0b, 0x4a0c, 
    0x4a0d, 0x4a10, 0x4a11, 0x4a12, 0x4a13, 0x4a14, 0x4a15, 0x4a16, 
    0x4a17, 0x4a17, 0x4a19, 0x4a0e, 0x4a06, 0x4a07, 0x4a1a, 0x4a1d, 
    0x4a1b, 0x4a1c, 0x68f8, 0x0007, 0x7d3f, 0x69f8, 0x0007, 0x4000, 
    0x68f8, 0x001d, 0xfffc, 0x4818, 0x68f8, 0x0018, 0xfffe, 0x7711, 
    0x0001, 0x4a08, 0xeeff, 0xf020, 0x0800, 0x7681, 0x0040, 0x7711, 
    0x0055, 0x7681, 0x0000, 0x7711, 0x0057, 0x1881, 0x8000, 0xf020, 
    0x0800, 0x1c00, 0x80f8, 0x05b8, 0x76f8, 0x05b5, 0x0000, 0xf074, 
    0x0080, 0xee01, 0x8a18, 0xf495, 0x8a1c, 0x8a1b, 0x8a1d, 0x8a1a, 
    0x8a07, 0x8a06, 0x8a0e, 0x8a19, 0x8a17, 0x8a17, 0x8a16, 0x8a15, 
    0x8a14, 0x8a13, 0x8a12, 0x8a11, 0x8a10, 0x8a0d, 0x8a0c, 0x8a0b, 
    0x8a0a, 0x8a09, 0x8a08, 0xf4eb, 0xf495, 0x4a08, 0x4a09, 0x4a0a, 
    0x4a0b, 0x4a0c, 0x4a0d, 0x4a10, 0x4a11, 0x4a12, 0x4a13, 0x4a14, 
    0x4a15, 0x4a16, 0x4a17, 0x4a17, 0x4a19, 0x4a0e, 0x4a06, 0x4a07, 
    0x4a1a, 0x4a1d, 0x4a1b, 0x4a1c, 0x68f8, 0x0007, 0x7d3f, 0x69f8, 
    0x0007, 0x4000, 0x68f8, 0x001d, 0xfffc, 0x4818, 0x68f8, 0x0018, 
    0xfffe, 0x7711, 0x0001, 0x4a08, 0x7681, 0x0800, 0x10f8, 0x05b7, 
    0x00f8, 0x05b5, 0x80f8, 0x05b5, 0x10f8, 0x05b7, 0x00f8, 0x05b6, 
    0x80f8, 0x05b6, 0x7211, 0x05b5, 0x7710, 0x1000, 0xf5a9, 0xfa20, 
    0x01ad, 0xf495, 0xeeff, 0xf074, 0x0080, 0xee01, 0x8a18, 0xf495, 
    0x8a1c, 0x8a1b, 0x8a1d, 0x8a1a, 0x8a07, 0x8a06, 0x8a0e, 0x8a19, 
    0x8a17, 0x8a17, 0x8a16, 0x8a15, 0x8a14, 0x8a13, 0x8a12, 0x8a11, 
    0x8a10, 0x8a0d, 0x8a0c, 0x8a0b, 0x8a0a, 0x8a09, 0x8a08, 0xf4eb, 
    0x4a11, 0x7711, 0x0054, 0x7681, 0x0000, 0x7711, 0x0055, 0x7681, 
    0x0003, 0x7711, 0x0057, 0x7681, 0x2800, 0x7711, 0x0055, 0x7681, 
    0x0004, 0x7711, 0x0057, 0x7681, 0x7141, 0x7711, 0x0055, 0x7681, 
    0x0000, 0x7711, 0x0057, 0x7681, 0x8000, 0x7711, 0x0055, 0x7681, 
    0x0001, 0x7711, 0x0057, 0x7681, 0x0022, 0x7711, 0x0055, 0x7681, 
    0x0002, 0x7711, 0x0057, 0x7681, 0x1000, 0x7711, 0x0054, 0x7681, 
    0x0080, 0x8a11, 0xfc00, 0xf495, 0x4a08, 0x4a09, 0x4a0a, 0x4a0b, 
    0x4a0c, 0x4a0d, 0x4a10, 0x4a11, 0x4a12, 0x4a13, 0x4a14, 0x4a15, 
    0x4a16, 0x4a17, 0x4a17, 0x4a19, 0x4a0e, 0x4a06, 0x4a07, 0x4a1a, 
    0x4a1d, 0x4a1b, 0x4a1c, 0x68f8, 0x0007, 0x7d3f, 0x69f8, 0x0007, 
    0x4000, 0x68f8, 0x001d, 0xfffc, 0x4818, 0x68f8, 0x0018, 0xfffe, 
    0x7711, 0x0001, 0x4a08, 0x7681, 0x0001, 0x6bf8, 0x05b1, 0x0001, 
    0x76f8, 0x05ba, 0x0000, 0x10f8, 0x05b9, 0xfa44, 0x0240, 0xf495, 
    0xeeff, 0x7712, 0x0054, 0x960f, 0xf830, 0x0240, 0xf074, 0x0080, 
    0x7711, 0x0054, 0x6981, 0x0001, 0xf074, 0x02e8, 0xf073, 0x0242, 
    0xf074, 0x0080, 0xee01, 0x8a18, 0xf495, 0x8a1c, 0x8a1b, 0x8a1d, 
    0x8a1a, 0x8a07, 0x8a06, 0x8a0e, 0x8a19, 0x8a17, 0x8a17, 0x8a16, 
    0x8a15, 0x8a14, 0x8a13, 0x8a12, 0x8a11, 0x8a10, 0x8a0d, 0x8a0c, 
    0x8a0b, 0x8a0a, 0x8a09, 0x8a08, 0xf4eb, 0xf495, 0x74f8, 0x0008, 
    0x0281, 0xf040, 0x0001, 0x75f8, 0x0008, 0x0281, 0xe808, 0x75f8, 
    0x0008, 0x0280, 0x74f8, 0x0008, 0x0281, 0xf030, 0xfffe, 0x75f8, 
    0x0008, 0x0281, 0xfc00, 0xf7be, 0xf6b9, 0xf4a0, 0xf6b7, 0xf6b5, 
    0xf6b6, 0xf7b8, 0x7718, 0x0360, 0x6bf8, 0x0018, 0x01ff, 0x68f8, 
    0x0018, 0xfffe, 0xf020, 0x05bf, 0xf100, 0x0001, 0xf84d, 0x029f, 
    0xf6b8, 0xf495, 0xf020, 0x05bf, 0xf073, 0x0299, 0x7ef8, 0x0012, 
    0xf000, 0x0001, 0x47f8, 0x0011, 0x7e92, 0x00f8, 0x0011, 0xf000, 
    0x0001, 0x7ef8, 0x0011, 0xf000, 0x0001, 0x6c89, 0x028e, 0xf7b8, 
    0xeefc, 0xf020, 0xffff, 0xf100, 0x0001, 0xf84d, 0x02b7, 0xf6b8, 
    0xf495, 0xf020, 0xffff, 0xf273, 0x02b1, 0x4e02, 0xf495, 0xf5e3, 
    0x5602, 0x7e00, 0x1100, 0xfa4c, 0x02af, 0x6b03, 0x0001, 0xf6b8, 
    0xee04, 0xf074, 0x02fe, 0xf074, 0x0321, 0x4a11, 0x7711, 0x0038, 
    0x7681, 0x0000, 0x7711, 0x0039, 0x7681, 0x0000, 0x7711, 0x0038, 
    0x7681, 0x0001, 0x7711, 0x0039, 0x7681, 0x0030, 0x7711, 0x0038, 
    0x7681, 0x000e, 0x7711, 0x0039, 0x7681, 0x0002, 0x7711, 0x0038, 
    0x7681, 0x0004, 0x7711, 0x0039, 0x7681, 0x00a0, 0x7711, 0x0038, 
    0x7681, 0x0005, 0x7711, 0x0039, 0x7681, 0x0000, 0x8a11, 0xfc00, 
    0x4a11, 0x7711, 0x0038, 0x7681, 0x0001, 0x7711, 0x0039, 0x6981, 
    0x0001, 0x8a11, 0xfc00, 0x4a11, 0x7711, 0x0038, 0x7681, 0x0001, 
    0x7711, 0x0039, 0x6881, 0xfffe, 0x8a11, 0xfc00, 0xf6b8, 0xf495, 
    0xf162, 0xffff, 0xf340, 0xffff, 0xf640, 0xf0e0, 0xf010, 0xffff, 
    0xf061, 0xffff, 0xfa44, 0x0312, 0x4a11, 0xeefe, 0xf273, 0x0318, 
    0xe800, 0xe900, 0x8911, 0xf495, 0x4911, 0x1081, 0xf300, 0x0001, 
    0x8100, 0xf074, 0x033d, 0xee02, 0x8a11, 0xfc00, 0xf495, 0xf073, 
    0x031f, 0x4a11, 0x8811, 0x10f8, 0x05bb, 0xf4e3, 0x10f8, 0x05be, 
    0xf845, 0x032f, 0x11f8, 0x05be, 0xf7e3, 0xf495, 0x4811, 0x10f8, 
    0x05bd, 0xf845, 0x0336, 0x10f8, 0x05bd, 0xf4e3, 0x10f8, 0x05bc, 
    0xf4e3, 0xf074, 0x031e, 0x8a11, 0xfc00, 0x4a11, 0x7711, 0x0026, 
    0x7681, 0x0010, 0x7712, 0x0001, 0x7713, 0x0001, 0x7711, 0x0000, 
    0x7681, 0xffff, 0x7711, 0x001d, 0xe501, 0x6981, 0x0004, 0xf495, 
    0xf6bb, 0xf074, 0x02bd, 0xf074, 0x01c8, 0xf4e1, 0xf495, 0xf073, 
    0x0355, 0x80f8, 0x05bc, 0xfc00, 0x80f8, 0x05bb, 0xfc00, 0xfc00, 
    
};

static const unsigned short _section_cinit[] = {
    0x0001, 0x05bb, 0x035f, 0x0001, 0x05bc, 0x035f, 0x0001, 0x05bd, 
    0x0000, 0x0001, 0x05be, 0x0000, 0x0000, 
};

static const unsigned short _section_vectors[] = {
    0xf273, 0x0273, 0xf495, 0xf495, 0xf4eb, 0xf495, 0xf495, 0xf495, 
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
    0xf273, 0x01fb, 0xf495, 0xf495, 0xf4eb, 0xf495, 0xf495, 0xf495, 
    0xf4eb, 0xf495, 0xf495, 0xf495, 0xf4eb, 0xf495, 0xf495, 0xf495, 
    0xf4eb, 0xf495, 0xf495, 0xf495, 0xf4eb, 0xf495, 0xf495, 0xf495, 
    0xf273, 0x0112, 0xf495, 0xf495, 0xf4eb, 0xf495, 0xf495, 0xf495, 
    0xf4eb, 0xf495, 0xf495, 0xf495, 0xf4eb, 0xf495, 0xf495, 0xf495, 
    0xf4eb, 0xf495, 0xf495, 0xf495, 0xf4eb, 0xf495, 0xf495, 0xf495, 
    0xf4eb, 0xf495, 0xf495, 0xf495, 0xf4eb, 0xf495, 0xf495, 0xf495, 
    0xf273, 0x016c, 0xf495, 0xf495, 0xf4eb, 0xf495, 0xf495, 0xf495, 
    
};

/* Program Mapping */
static const struct dsp_section dsp_image[] = {

    {_section_text, 0x0080, 0x02e0},
    {_section_cinit, 0x05bf, 0x000d},
    {NULL /* .bss */, 0x0560, 0x005f},
    {NULL /* .stack */, 0x0360, 0x0200},
    {_section_vectors, 0x7f80, 0x0080},
    {NULL /* .dma */, 0x8000, 0x1000},
    {NULL, 0, 0}
};

/* Symbol table, usable with the DSP_() macro (see dsp-target.h). */
#define cinit 0x05bf
#define ___cinit__ 0x05bf
#define ___text__ 0x0080
#define etext 0x0360
#define ___etext__ 0x0360
#define ___data__ 0x0080
#define edata 0x0080
#define ___edata__ 0x0080
#define ___bss__ 0x0560
#define end 0x05bf
#define ___end__ 0x05bf
#define _int0_count 0x05b1
#define _status 0x0560
#define _handle_int0 0x01fb
#define _int_arm 0x025d
#define _main 0x033d
#define _handle_dmac 0x016c
#define _waiting 0x05ba
#define _sdem_addrh 0x05b2
#define _sdem_addrl 0x05b3
#define _dma0_stopped 0x05b9
#define _dma0_unlocked 0x05b8
#define _sdem_dsp_size 0x05b4
#define _handle_dma0 0x0112
#define _dsp_level 0x05b5
#define _dma_init 0x01c8
#define _sdem_level 0x05b6
#define _rebuffer 0x0080
#define _last_size 0x05b7
#define _audiohw_start 0x02e8
#define _audiohw_init 0x02bd
#define _audiohw_stop 0x02f3
#define _c_int00 0x0273
#define __dtors_ptr 0x05be
#define _abort 0x031e
#define _exit 0x0321
#define __cleanup_ptr 0x05bd
#define __lock 0x05bb
#define __register_unlock 0x0359
#define __nop 0x035f
#define __register_lock 0x035c
#define __unlock 0x05bc
#define __args_main 0x02fe

#endif

