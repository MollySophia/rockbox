/***************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * This file was automatically generated by headergen, DO NOT EDIT it.
 * headergen version: 3.0.0
 * imx233 version: 2.4.0
 * imx233 authors: Amaury Pouly
 *
 * Copyright (C) 2015 by the authors
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ****************************************************************************/
#ifndef __HEADERGEN_IMX233_PXP_H__
#define __HEADERGEN_IMX233_PXP_H__

#define HW_PXP_CTRL                                 HW(PXP_CTRL)
#define HWA_PXP_CTRL                                (0x8002a000 + 0x0)
#define HWT_PXP_CTRL                                HWIO_32_RW
#define HWN_PXP_CTRL                                PXP_CTRL
#define HWI_PXP_CTRL                                
#define HW_PXP_CTRL_SET                             HW(PXP_CTRL_SET)
#define HWA_PXP_CTRL_SET                            (HWA_PXP_CTRL + 0x4)
#define HWT_PXP_CTRL_SET                            HWIO_32_WO
#define HWN_PXP_CTRL_SET                            PXP_CTRL
#define HWI_PXP_CTRL_SET                            
#define HW_PXP_CTRL_CLR                             HW(PXP_CTRL_CLR)
#define HWA_PXP_CTRL_CLR                            (HWA_PXP_CTRL + 0x8)
#define HWT_PXP_CTRL_CLR                            HWIO_32_WO
#define HWN_PXP_CTRL_CLR                            PXP_CTRL
#define HWI_PXP_CTRL_CLR                            
#define HW_PXP_CTRL_TOG                             HW(PXP_CTRL_TOG)
#define HWA_PXP_CTRL_TOG                            (HWA_PXP_CTRL + 0xc)
#define HWT_PXP_CTRL_TOG                            HWIO_32_WO
#define HWN_PXP_CTRL_TOG                            PXP_CTRL
#define HWI_PXP_CTRL_TOG                            
#define BP_PXP_CTRL_SFTRST                          31
#define BM_PXP_CTRL_SFTRST                          0x80000000
#define BF_PXP_CTRL_SFTRST(v)                       (((v) & 0x1) << 31)
#define BFM_PXP_CTRL_SFTRST(v)                      BM_PXP_CTRL_SFTRST
#define BF_PXP_CTRL_SFTRST_V(e)                     BF_PXP_CTRL_SFTRST(BV_PXP_CTRL_SFTRST__##e)
#define BFM_PXP_CTRL_SFTRST_V(v)                    BM_PXP_CTRL_SFTRST
#define BP_PXP_CTRL_CLKGATE                         30
#define BM_PXP_CTRL_CLKGATE                         0x40000000
#define BF_PXP_CTRL_CLKGATE(v)                      (((v) & 0x1) << 30)
#define BFM_PXP_CTRL_CLKGATE(v)                     BM_PXP_CTRL_CLKGATE
#define BF_PXP_CTRL_CLKGATE_V(e)                    BF_PXP_CTRL_CLKGATE(BV_PXP_CTRL_CLKGATE__##e)
#define BFM_PXP_CTRL_CLKGATE_V(v)                   BM_PXP_CTRL_CLKGATE
#define BP_PXP_CTRL_RSVD2                           28
#define BM_PXP_CTRL_RSVD2                           0x30000000
#define BF_PXP_CTRL_RSVD2(v)                        (((v) & 0x3) << 28)
#define BFM_PXP_CTRL_RSVD2(v)                       BM_PXP_CTRL_RSVD2
#define BF_PXP_CTRL_RSVD2_V(e)                      BF_PXP_CTRL_RSVD2(BV_PXP_CTRL_RSVD2__##e)
#define BFM_PXP_CTRL_RSVD2_V(v)                     BM_PXP_CTRL_RSVD2
#define BP_PXP_CTRL_INTERLACED_OUTPUT               26
#define BM_PXP_CTRL_INTERLACED_OUTPUT               0xc000000
#define BV_PXP_CTRL_INTERLACED_OUTPUT__PROGRESSIVE  0x0
#define BV_PXP_CTRL_INTERLACED_OUTPUT__FIELD0       0x1
#define BV_PXP_CTRL_INTERLACED_OUTPUT__FIELD1       0x2
#define BV_PXP_CTRL_INTERLACED_OUTPUT__INTERLACED   0x3
#define BF_PXP_CTRL_INTERLACED_OUTPUT(v)            (((v) & 0x3) << 26)
#define BFM_PXP_CTRL_INTERLACED_OUTPUT(v)           BM_PXP_CTRL_INTERLACED_OUTPUT
#define BF_PXP_CTRL_INTERLACED_OUTPUT_V(e)          BF_PXP_CTRL_INTERLACED_OUTPUT(BV_PXP_CTRL_INTERLACED_OUTPUT__##e)
#define BFM_PXP_CTRL_INTERLACED_OUTPUT_V(v)         BM_PXP_CTRL_INTERLACED_OUTPUT
#define BP_PXP_CTRL_INTERLACED_INPUT                24
#define BM_PXP_CTRL_INTERLACED_INPUT                0x3000000
#define BV_PXP_CTRL_INTERLACED_INPUT__PROGRESSIVE   0x0
#define BV_PXP_CTRL_INTERLACED_INPUT__FIELD0        0x2
#define BV_PXP_CTRL_INTERLACED_INPUT__FIELD1        0x3
#define BF_PXP_CTRL_INTERLACED_INPUT(v)             (((v) & 0x3) << 24)
#define BFM_PXP_CTRL_INTERLACED_INPUT(v)            BM_PXP_CTRL_INTERLACED_INPUT
#define BF_PXP_CTRL_INTERLACED_INPUT_V(e)           BF_PXP_CTRL_INTERLACED_INPUT(BV_PXP_CTRL_INTERLACED_INPUT__##e)
#define BFM_PXP_CTRL_INTERLACED_INPUT_V(v)          BM_PXP_CTRL_INTERLACED_INPUT
#define BP_PXP_CTRL_RSVD1                           23
#define BM_PXP_CTRL_RSVD1                           0x800000
#define BF_PXP_CTRL_RSVD1(v)                        (((v) & 0x1) << 23)
#define BFM_PXP_CTRL_RSVD1(v)                       BM_PXP_CTRL_RSVD1
#define BF_PXP_CTRL_RSVD1_V(e)                      BF_PXP_CTRL_RSVD1(BV_PXP_CTRL_RSVD1__##e)
#define BFM_PXP_CTRL_RSVD1_V(v)                     BM_PXP_CTRL_RSVD1
#define BP_PXP_CTRL_ALPHA_OUTPUT                    22
#define BM_PXP_CTRL_ALPHA_OUTPUT                    0x400000
#define BF_PXP_CTRL_ALPHA_OUTPUT(v)                 (((v) & 0x1) << 22)
#define BFM_PXP_CTRL_ALPHA_OUTPUT(v)                BM_PXP_CTRL_ALPHA_OUTPUT
#define BF_PXP_CTRL_ALPHA_OUTPUT_V(e)               BF_PXP_CTRL_ALPHA_OUTPUT(BV_PXP_CTRL_ALPHA_OUTPUT__##e)
#define BFM_PXP_CTRL_ALPHA_OUTPUT_V(v)              BM_PXP_CTRL_ALPHA_OUTPUT
#define BP_PXP_CTRL_IN_PLACE                        21
#define BM_PXP_CTRL_IN_PLACE                        0x200000
#define BF_PXP_CTRL_IN_PLACE(v)                     (((v) & 0x1) << 21)
#define BFM_PXP_CTRL_IN_PLACE(v)                    BM_PXP_CTRL_IN_PLACE
#define BF_PXP_CTRL_IN_PLACE_V(e)                   BF_PXP_CTRL_IN_PLACE(BV_PXP_CTRL_IN_PLACE__##e)
#define BFM_PXP_CTRL_IN_PLACE_V(v)                  BM_PXP_CTRL_IN_PLACE
#define BP_PXP_CTRL_DELTA                           20
#define BM_PXP_CTRL_DELTA                           0x100000
#define BF_PXP_CTRL_DELTA(v)                        (((v) & 0x1) << 20)
#define BFM_PXP_CTRL_DELTA(v)                       BM_PXP_CTRL_DELTA
#define BF_PXP_CTRL_DELTA_V(e)                      BF_PXP_CTRL_DELTA(BV_PXP_CTRL_DELTA__##e)
#define BFM_PXP_CTRL_DELTA_V(v)                     BM_PXP_CTRL_DELTA
#define BP_PXP_CTRL_CROP                            19
#define BM_PXP_CTRL_CROP                            0x80000
#define BF_PXP_CTRL_CROP(v)                         (((v) & 0x1) << 19)
#define BFM_PXP_CTRL_CROP(v)                        BM_PXP_CTRL_CROP
#define BF_PXP_CTRL_CROP_V(e)                       BF_PXP_CTRL_CROP(BV_PXP_CTRL_CROP__##e)
#define BFM_PXP_CTRL_CROP_V(v)                      BM_PXP_CTRL_CROP
#define BP_PXP_CTRL_SCALE                           18
#define BM_PXP_CTRL_SCALE                           0x40000
#define BF_PXP_CTRL_SCALE(v)                        (((v) & 0x1) << 18)
#define BFM_PXP_CTRL_SCALE(v)                       BM_PXP_CTRL_SCALE
#define BF_PXP_CTRL_SCALE_V(e)                      BF_PXP_CTRL_SCALE(BV_PXP_CTRL_SCALE__##e)
#define BFM_PXP_CTRL_SCALE_V(v)                     BM_PXP_CTRL_SCALE
#define BP_PXP_CTRL_UPSAMPLE                        17
#define BM_PXP_CTRL_UPSAMPLE                        0x20000
#define BF_PXP_CTRL_UPSAMPLE(v)                     (((v) & 0x1) << 17)
#define BFM_PXP_CTRL_UPSAMPLE(v)                    BM_PXP_CTRL_UPSAMPLE
#define BF_PXP_CTRL_UPSAMPLE_V(e)                   BF_PXP_CTRL_UPSAMPLE(BV_PXP_CTRL_UPSAMPLE__##e)
#define BFM_PXP_CTRL_UPSAMPLE_V(v)                  BM_PXP_CTRL_UPSAMPLE
#define BP_PXP_CTRL_SUBSAMPLE                       16
#define BM_PXP_CTRL_SUBSAMPLE                       0x10000
#define BF_PXP_CTRL_SUBSAMPLE(v)                    (((v) & 0x1) << 16)
#define BFM_PXP_CTRL_SUBSAMPLE(v)                   BM_PXP_CTRL_SUBSAMPLE
#define BF_PXP_CTRL_SUBSAMPLE_V(e)                  BF_PXP_CTRL_SUBSAMPLE(BV_PXP_CTRL_SUBSAMPLE__##e)
#define BFM_PXP_CTRL_SUBSAMPLE_V(v)                 BM_PXP_CTRL_SUBSAMPLE
#define BP_PXP_CTRL_S0_FORMAT                       12
#define BM_PXP_CTRL_S0_FORMAT                       0xf000
#define BV_PXP_CTRL_S0_FORMAT__RGB888               0x1
#define BV_PXP_CTRL_S0_FORMAT__RGB565               0x4
#define BV_PXP_CTRL_S0_FORMAT__RGB555               0x5
#define BV_PXP_CTRL_S0_FORMAT__YUV422               0x8
#define BV_PXP_CTRL_S0_FORMAT__YUV420               0x9
#define BF_PXP_CTRL_S0_FORMAT(v)                    (((v) & 0xf) << 12)
#define BFM_PXP_CTRL_S0_FORMAT(v)                   BM_PXP_CTRL_S0_FORMAT
#define BF_PXP_CTRL_S0_FORMAT_V(e)                  BF_PXP_CTRL_S0_FORMAT(BV_PXP_CTRL_S0_FORMAT__##e)
#define BFM_PXP_CTRL_S0_FORMAT_V(v)                 BM_PXP_CTRL_S0_FORMAT
#define BP_PXP_CTRL_VFLIP                           11
#define BM_PXP_CTRL_VFLIP                           0x800
#define BF_PXP_CTRL_VFLIP(v)                        (((v) & 0x1) << 11)
#define BFM_PXP_CTRL_VFLIP(v)                       BM_PXP_CTRL_VFLIP
#define BF_PXP_CTRL_VFLIP_V(e)                      BF_PXP_CTRL_VFLIP(BV_PXP_CTRL_VFLIP__##e)
#define BFM_PXP_CTRL_VFLIP_V(v)                     BM_PXP_CTRL_VFLIP
#define BP_PXP_CTRL_HFLIP                           10
#define BM_PXP_CTRL_HFLIP                           0x400
#define BF_PXP_CTRL_HFLIP(v)                        (((v) & 0x1) << 10)
#define BFM_PXP_CTRL_HFLIP(v)                       BM_PXP_CTRL_HFLIP
#define BF_PXP_CTRL_HFLIP_V(e)                      BF_PXP_CTRL_HFLIP(BV_PXP_CTRL_HFLIP__##e)
#define BFM_PXP_CTRL_HFLIP_V(v)                     BM_PXP_CTRL_HFLIP
#define BP_PXP_CTRL_ROTATE                          8
#define BM_PXP_CTRL_ROTATE                          0x300
#define BV_PXP_CTRL_ROTATE__ROT_0                   0x0
#define BV_PXP_CTRL_ROTATE__ROT_90                  0x1
#define BV_PXP_CTRL_ROTATE__ROT_180                 0x2
#define BV_PXP_CTRL_ROTATE__ROT_270                 0x3
#define BF_PXP_CTRL_ROTATE(v)                       (((v) & 0x3) << 8)
#define BFM_PXP_CTRL_ROTATE(v)                      BM_PXP_CTRL_ROTATE
#define BF_PXP_CTRL_ROTATE_V(e)                     BF_PXP_CTRL_ROTATE(BV_PXP_CTRL_ROTATE__##e)
#define BFM_PXP_CTRL_ROTATE_V(v)                    BM_PXP_CTRL_ROTATE
#define BP_PXP_CTRL_OUTPUT_RGB_FORMAT               4
#define BM_PXP_CTRL_OUTPUT_RGB_FORMAT               0xf0
#define BV_PXP_CTRL_OUTPUT_RGB_FORMAT__ARGB8888     0x0
#define BV_PXP_CTRL_OUTPUT_RGB_FORMAT__RGB888       0x1
#define BV_PXP_CTRL_OUTPUT_RGB_FORMAT__RGB888P      0x2
#define BV_PXP_CTRL_OUTPUT_RGB_FORMAT__ARGB1555     0x3
#define BV_PXP_CTRL_OUTPUT_RGB_FORMAT__RGB565       0x4
#define BV_PXP_CTRL_OUTPUT_RGB_FORMAT__RGB555       0x5
#define BF_PXP_CTRL_OUTPUT_RGB_FORMAT(v)            (((v) & 0xf) << 4)
#define BFM_PXP_CTRL_OUTPUT_RGB_FORMAT(v)           BM_PXP_CTRL_OUTPUT_RGB_FORMAT
#define BF_PXP_CTRL_OUTPUT_RGB_FORMAT_V(e)          BF_PXP_CTRL_OUTPUT_RGB_FORMAT(BV_PXP_CTRL_OUTPUT_RGB_FORMAT__##e)
#define BFM_PXP_CTRL_OUTPUT_RGB_FORMAT_V(v)         BM_PXP_CTRL_OUTPUT_RGB_FORMAT
#define BP_PXP_CTRL_RSVD0                           3
#define BM_PXP_CTRL_RSVD0                           0x8
#define BF_PXP_CTRL_RSVD0(v)                        (((v) & 0x1) << 3)
#define BFM_PXP_CTRL_RSVD0(v)                       BM_PXP_CTRL_RSVD0
#define BF_PXP_CTRL_RSVD0_V(e)                      BF_PXP_CTRL_RSVD0(BV_PXP_CTRL_RSVD0__##e)
#define BFM_PXP_CTRL_RSVD0_V(v)                     BM_PXP_CTRL_RSVD0
#define BP_PXP_CTRL_ENABLE_LCD_HANDSHAKE            2
#define BM_PXP_CTRL_ENABLE_LCD_HANDSHAKE            0x4
#define BF_PXP_CTRL_ENABLE_LCD_HANDSHAKE(v)         (((v) & 0x1) << 2)
#define BFM_PXP_CTRL_ENABLE_LCD_HANDSHAKE(v)        BM_PXP_CTRL_ENABLE_LCD_HANDSHAKE
#define BF_PXP_CTRL_ENABLE_LCD_HANDSHAKE_V(e)       BF_PXP_CTRL_ENABLE_LCD_HANDSHAKE(BV_PXP_CTRL_ENABLE_LCD_HANDSHAKE__##e)
#define BFM_PXP_CTRL_ENABLE_LCD_HANDSHAKE_V(v)      BM_PXP_CTRL_ENABLE_LCD_HANDSHAKE
#define BP_PXP_CTRL_IRQ_ENABLE                      1
#define BM_PXP_CTRL_IRQ_ENABLE                      0x2
#define BF_PXP_CTRL_IRQ_ENABLE(v)                   (((v) & 0x1) << 1)
#define BFM_PXP_CTRL_IRQ_ENABLE(v)                  BM_PXP_CTRL_IRQ_ENABLE
#define BF_PXP_CTRL_IRQ_ENABLE_V(e)                 BF_PXP_CTRL_IRQ_ENABLE(BV_PXP_CTRL_IRQ_ENABLE__##e)
#define BFM_PXP_CTRL_IRQ_ENABLE_V(v)                BM_PXP_CTRL_IRQ_ENABLE
#define BP_PXP_CTRL_ENABLE                          0
#define BM_PXP_CTRL_ENABLE                          0x1
#define BF_PXP_CTRL_ENABLE(v)                       (((v) & 0x1) << 0)
#define BFM_PXP_CTRL_ENABLE(v)                      BM_PXP_CTRL_ENABLE
#define BF_PXP_CTRL_ENABLE_V(e)                     BF_PXP_CTRL_ENABLE(BV_PXP_CTRL_ENABLE__##e)
#define BFM_PXP_CTRL_ENABLE_V(v)                    BM_PXP_CTRL_ENABLE

#define HW_PXP_STAT                         HW(PXP_STAT)
#define HWA_PXP_STAT                        (0x8002a000 + 0x10)
#define HWT_PXP_STAT                        HWIO_32_RW
#define HWN_PXP_STAT                        PXP_STAT
#define HWI_PXP_STAT                        
#define HW_PXP_STAT_SET                     HW(PXP_STAT_SET)
#define HWA_PXP_STAT_SET                    (HWA_PXP_STAT + 0x4)
#define HWT_PXP_STAT_SET                    HWIO_32_WO
#define HWN_PXP_STAT_SET                    PXP_STAT
#define HWI_PXP_STAT_SET                    
#define HW_PXP_STAT_CLR                     HW(PXP_STAT_CLR)
#define HWA_PXP_STAT_CLR                    (HWA_PXP_STAT + 0x8)
#define HWT_PXP_STAT_CLR                    HWIO_32_WO
#define HWN_PXP_STAT_CLR                    PXP_STAT
#define HWI_PXP_STAT_CLR                    
#define HW_PXP_STAT_TOG                     HW(PXP_STAT_TOG)
#define HWA_PXP_STAT_TOG                    (HWA_PXP_STAT + 0xc)
#define HWT_PXP_STAT_TOG                    HWIO_32_WO
#define HWN_PXP_STAT_TOG                    PXP_STAT
#define HWI_PXP_STAT_TOG                    
#define BP_PXP_STAT_BLOCKX                  24
#define BM_PXP_STAT_BLOCKX                  0xff000000
#define BF_PXP_STAT_BLOCKX(v)               (((v) & 0xff) << 24)
#define BFM_PXP_STAT_BLOCKX(v)              BM_PXP_STAT_BLOCKX
#define BF_PXP_STAT_BLOCKX_V(e)             BF_PXP_STAT_BLOCKX(BV_PXP_STAT_BLOCKX__##e)
#define BFM_PXP_STAT_BLOCKX_V(v)            BM_PXP_STAT_BLOCKX
#define BP_PXP_STAT_BLOCKY                  16
#define BM_PXP_STAT_BLOCKY                  0xff0000
#define BF_PXP_STAT_BLOCKY(v)               (((v) & 0xff) << 16)
#define BFM_PXP_STAT_BLOCKY(v)              BM_PXP_STAT_BLOCKY
#define BF_PXP_STAT_BLOCKY_V(e)             BF_PXP_STAT_BLOCKY(BV_PXP_STAT_BLOCKY__##e)
#define BFM_PXP_STAT_BLOCKY_V(v)            BM_PXP_STAT_BLOCKY
#define BP_PXP_STAT_RSVD2                   8
#define BM_PXP_STAT_RSVD2                   0xff00
#define BF_PXP_STAT_RSVD2(v)                (((v) & 0xff) << 8)
#define BFM_PXP_STAT_RSVD2(v)               BM_PXP_STAT_RSVD2
#define BF_PXP_STAT_RSVD2_V(e)              BF_PXP_STAT_RSVD2(BV_PXP_STAT_RSVD2__##e)
#define BFM_PXP_STAT_RSVD2_V(v)             BM_PXP_STAT_RSVD2
#define BP_PXP_STAT_AXI_ERROR_ID            4
#define BM_PXP_STAT_AXI_ERROR_ID            0xf0
#define BF_PXP_STAT_AXI_ERROR_ID(v)         (((v) & 0xf) << 4)
#define BFM_PXP_STAT_AXI_ERROR_ID(v)        BM_PXP_STAT_AXI_ERROR_ID
#define BF_PXP_STAT_AXI_ERROR_ID_V(e)       BF_PXP_STAT_AXI_ERROR_ID(BV_PXP_STAT_AXI_ERROR_ID__##e)
#define BFM_PXP_STAT_AXI_ERROR_ID_V(v)      BM_PXP_STAT_AXI_ERROR_ID
#define BP_PXP_STAT_RSVD1                   3
#define BM_PXP_STAT_RSVD1                   0x8
#define BF_PXP_STAT_RSVD1(v)                (((v) & 0x1) << 3)
#define BFM_PXP_STAT_RSVD1(v)               BM_PXP_STAT_RSVD1
#define BF_PXP_STAT_RSVD1_V(e)              BF_PXP_STAT_RSVD1(BV_PXP_STAT_RSVD1__##e)
#define BFM_PXP_STAT_RSVD1_V(v)             BM_PXP_STAT_RSVD1
#define BP_PXP_STAT_AXI_READ_ERROR          2
#define BM_PXP_STAT_AXI_READ_ERROR          0x4
#define BF_PXP_STAT_AXI_READ_ERROR(v)       (((v) & 0x1) << 2)
#define BFM_PXP_STAT_AXI_READ_ERROR(v)      BM_PXP_STAT_AXI_READ_ERROR
#define BF_PXP_STAT_AXI_READ_ERROR_V(e)     BF_PXP_STAT_AXI_READ_ERROR(BV_PXP_STAT_AXI_READ_ERROR__##e)
#define BFM_PXP_STAT_AXI_READ_ERROR_V(v)    BM_PXP_STAT_AXI_READ_ERROR
#define BP_PXP_STAT_AXI_WRITE_ERROR         1
#define BM_PXP_STAT_AXI_WRITE_ERROR         0x2
#define BF_PXP_STAT_AXI_WRITE_ERROR(v)      (((v) & 0x1) << 1)
#define BFM_PXP_STAT_AXI_WRITE_ERROR(v)     BM_PXP_STAT_AXI_WRITE_ERROR
#define BF_PXP_STAT_AXI_WRITE_ERROR_V(e)    BF_PXP_STAT_AXI_WRITE_ERROR(BV_PXP_STAT_AXI_WRITE_ERROR__##e)
#define BFM_PXP_STAT_AXI_WRITE_ERROR_V(v)   BM_PXP_STAT_AXI_WRITE_ERROR
#define BP_PXP_STAT_IRQ                     0
#define BM_PXP_STAT_IRQ                     0x1
#define BF_PXP_STAT_IRQ(v)                  (((v) & 0x1) << 0)
#define BFM_PXP_STAT_IRQ(v)                 BM_PXP_STAT_IRQ
#define BF_PXP_STAT_IRQ_V(e)                BF_PXP_STAT_IRQ(BV_PXP_STAT_IRQ__##e)
#define BFM_PXP_STAT_IRQ_V(v)               BM_PXP_STAT_IRQ

#define HW_PXP_RGBBUF               HW(PXP_RGBBUF)
#define HWA_PXP_RGBBUF              (0x8002a000 + 0x20)
#define HWT_PXP_RGBBUF              HWIO_32_RW
#define HWN_PXP_RGBBUF              PXP_RGBBUF
#define HWI_PXP_RGBBUF              
#define BP_PXP_RGBBUF_ADDR          0
#define BM_PXP_RGBBUF_ADDR          0xffffffff
#define BF_PXP_RGBBUF_ADDR(v)       (((v) & 0xffffffff) << 0)
#define BFM_PXP_RGBBUF_ADDR(v)      BM_PXP_RGBBUF_ADDR
#define BF_PXP_RGBBUF_ADDR_V(e)     BF_PXP_RGBBUF_ADDR(BV_PXP_RGBBUF_ADDR__##e)
#define BFM_PXP_RGBBUF_ADDR_V(v)    BM_PXP_RGBBUF_ADDR

#define HW_PXP_RGBBUF2              HW(PXP_RGBBUF2)
#define HWA_PXP_RGBBUF2             (0x8002a000 + 0x30)
#define HWT_PXP_RGBBUF2             HWIO_32_RW
#define HWN_PXP_RGBBUF2             PXP_RGBBUF2
#define HWI_PXP_RGBBUF2             
#define BP_PXP_RGBBUF2_ADDR         0
#define BM_PXP_RGBBUF2_ADDR         0xffffffff
#define BF_PXP_RGBBUF2_ADDR(v)      (((v) & 0xffffffff) << 0)
#define BFM_PXP_RGBBUF2_ADDR(v)     BM_PXP_RGBBUF2_ADDR
#define BF_PXP_RGBBUF2_ADDR_V(e)    BF_PXP_RGBBUF2_ADDR(BV_PXP_RGBBUF2_ADDR__##e)
#define BFM_PXP_RGBBUF2_ADDR_V(v)   BM_PXP_RGBBUF2_ADDR

#define HW_PXP_RGBSIZE              HW(PXP_RGBSIZE)
#define HWA_PXP_RGBSIZE             (0x8002a000 + 0x40)
#define HWT_PXP_RGBSIZE             HWIO_32_RW
#define HWN_PXP_RGBSIZE             PXP_RGBSIZE
#define HWI_PXP_RGBSIZE             
#define BP_PXP_RGBSIZE_ALPHA        24
#define BM_PXP_RGBSIZE_ALPHA        0xff000000
#define BF_PXP_RGBSIZE_ALPHA(v)     (((v) & 0xff) << 24)
#define BFM_PXP_RGBSIZE_ALPHA(v)    BM_PXP_RGBSIZE_ALPHA
#define BF_PXP_RGBSIZE_ALPHA_V(e)   BF_PXP_RGBSIZE_ALPHA(BV_PXP_RGBSIZE_ALPHA__##e)
#define BFM_PXP_RGBSIZE_ALPHA_V(v)  BM_PXP_RGBSIZE_ALPHA
#define BP_PXP_RGBSIZE_WIDTH        12
#define BM_PXP_RGBSIZE_WIDTH        0xfff000
#define BF_PXP_RGBSIZE_WIDTH(v)     (((v) & 0xfff) << 12)
#define BFM_PXP_RGBSIZE_WIDTH(v)    BM_PXP_RGBSIZE_WIDTH
#define BF_PXP_RGBSIZE_WIDTH_V(e)   BF_PXP_RGBSIZE_WIDTH(BV_PXP_RGBSIZE_WIDTH__##e)
#define BFM_PXP_RGBSIZE_WIDTH_V(v)  BM_PXP_RGBSIZE_WIDTH
#define BP_PXP_RGBSIZE_HEIGHT       0
#define BM_PXP_RGBSIZE_HEIGHT       0xfff
#define BF_PXP_RGBSIZE_HEIGHT(v)    (((v) & 0xfff) << 0)
#define BFM_PXP_RGBSIZE_HEIGHT(v)   BM_PXP_RGBSIZE_HEIGHT
#define BF_PXP_RGBSIZE_HEIGHT_V(e)  BF_PXP_RGBSIZE_HEIGHT(BV_PXP_RGBSIZE_HEIGHT__##e)
#define BFM_PXP_RGBSIZE_HEIGHT_V(v) BM_PXP_RGBSIZE_HEIGHT

#define HW_PXP_S0BUF            HW(PXP_S0BUF)
#define HWA_PXP_S0BUF           (0x8002a000 + 0x50)
#define HWT_PXP_S0BUF           HWIO_32_RW
#define HWN_PXP_S0BUF           PXP_S0BUF
#define HWI_PXP_S0BUF           
#define BP_PXP_S0BUF_ADDR       0
#define BM_PXP_S0BUF_ADDR       0xffffffff
#define BF_PXP_S0BUF_ADDR(v)    (((v) & 0xffffffff) << 0)
#define BFM_PXP_S0BUF_ADDR(v)   BM_PXP_S0BUF_ADDR
#define BF_PXP_S0BUF_ADDR_V(e)  BF_PXP_S0BUF_ADDR(BV_PXP_S0BUF_ADDR__##e)
#define BFM_PXP_S0BUF_ADDR_V(v) BM_PXP_S0BUF_ADDR

#define HW_PXP_S0UBUF               HW(PXP_S0UBUF)
#define HWA_PXP_S0UBUF              (0x8002a000 + 0x60)
#define HWT_PXP_S0UBUF              HWIO_32_RW
#define HWN_PXP_S0UBUF              PXP_S0UBUF
#define HWI_PXP_S0UBUF              
#define BP_PXP_S0UBUF_ADDR          0
#define BM_PXP_S0UBUF_ADDR          0xffffffff
#define BF_PXP_S0UBUF_ADDR(v)       (((v) & 0xffffffff) << 0)
#define BFM_PXP_S0UBUF_ADDR(v)      BM_PXP_S0UBUF_ADDR
#define BF_PXP_S0UBUF_ADDR_V(e)     BF_PXP_S0UBUF_ADDR(BV_PXP_S0UBUF_ADDR__##e)
#define BFM_PXP_S0UBUF_ADDR_V(v)    BM_PXP_S0UBUF_ADDR

#define HW_PXP_S0VBUF               HW(PXP_S0VBUF)
#define HWA_PXP_S0VBUF              (0x8002a000 + 0x70)
#define HWT_PXP_S0VBUF              HWIO_32_RW
#define HWN_PXP_S0VBUF              PXP_S0VBUF
#define HWI_PXP_S0VBUF              
#define BP_PXP_S0VBUF_ADDR          0
#define BM_PXP_S0VBUF_ADDR          0xffffffff
#define BF_PXP_S0VBUF_ADDR(v)       (((v) & 0xffffffff) << 0)
#define BFM_PXP_S0VBUF_ADDR(v)      BM_PXP_S0VBUF_ADDR
#define BF_PXP_S0VBUF_ADDR_V(e)     BF_PXP_S0VBUF_ADDR(BV_PXP_S0VBUF_ADDR__##e)
#define BFM_PXP_S0VBUF_ADDR_V(v)    BM_PXP_S0VBUF_ADDR

#define HW_PXP_S0PARAM              HW(PXP_S0PARAM)
#define HWA_PXP_S0PARAM             (0x8002a000 + 0x80)
#define HWT_PXP_S0PARAM             HWIO_32_RW
#define HWN_PXP_S0PARAM             PXP_S0PARAM
#define HWI_PXP_S0PARAM             
#define BP_PXP_S0PARAM_XBASE        24
#define BM_PXP_S0PARAM_XBASE        0xff000000
#define BF_PXP_S0PARAM_XBASE(v)     (((v) & 0xff) << 24)
#define BFM_PXP_S0PARAM_XBASE(v)    BM_PXP_S0PARAM_XBASE
#define BF_PXP_S0PARAM_XBASE_V(e)   BF_PXP_S0PARAM_XBASE(BV_PXP_S0PARAM_XBASE__##e)
#define BFM_PXP_S0PARAM_XBASE_V(v)  BM_PXP_S0PARAM_XBASE
#define BP_PXP_S0PARAM_YBASE        16
#define BM_PXP_S0PARAM_YBASE        0xff0000
#define BF_PXP_S0PARAM_YBASE(v)     (((v) & 0xff) << 16)
#define BFM_PXP_S0PARAM_YBASE(v)    BM_PXP_S0PARAM_YBASE
#define BF_PXP_S0PARAM_YBASE_V(e)   BF_PXP_S0PARAM_YBASE(BV_PXP_S0PARAM_YBASE__##e)
#define BFM_PXP_S0PARAM_YBASE_V(v)  BM_PXP_S0PARAM_YBASE
#define BP_PXP_S0PARAM_WIDTH        8
#define BM_PXP_S0PARAM_WIDTH        0xff00
#define BF_PXP_S0PARAM_WIDTH(v)     (((v) & 0xff) << 8)
#define BFM_PXP_S0PARAM_WIDTH(v)    BM_PXP_S0PARAM_WIDTH
#define BF_PXP_S0PARAM_WIDTH_V(e)   BF_PXP_S0PARAM_WIDTH(BV_PXP_S0PARAM_WIDTH__##e)
#define BFM_PXP_S0PARAM_WIDTH_V(v)  BM_PXP_S0PARAM_WIDTH
#define BP_PXP_S0PARAM_HEIGHT       0
#define BM_PXP_S0PARAM_HEIGHT       0xff
#define BF_PXP_S0PARAM_HEIGHT(v)    (((v) & 0xff) << 0)
#define BFM_PXP_S0PARAM_HEIGHT(v)   BM_PXP_S0PARAM_HEIGHT
#define BF_PXP_S0PARAM_HEIGHT_V(e)  BF_PXP_S0PARAM_HEIGHT(BV_PXP_S0PARAM_HEIGHT__##e)
#define BFM_PXP_S0PARAM_HEIGHT_V(v) BM_PXP_S0PARAM_HEIGHT

#define HW_PXP_S0BACKGROUND             HW(PXP_S0BACKGROUND)
#define HWA_PXP_S0BACKGROUND            (0x8002a000 + 0x90)
#define HWT_PXP_S0BACKGROUND            HWIO_32_RW
#define HWN_PXP_S0BACKGROUND            PXP_S0BACKGROUND
#define HWI_PXP_S0BACKGROUND            
#define BP_PXP_S0BACKGROUND_COLOR       0
#define BM_PXP_S0BACKGROUND_COLOR       0xffffffff
#define BF_PXP_S0BACKGROUND_COLOR(v)    (((v) & 0xffffffff) << 0)
#define BFM_PXP_S0BACKGROUND_COLOR(v)   BM_PXP_S0BACKGROUND_COLOR
#define BF_PXP_S0BACKGROUND_COLOR_V(e)  BF_PXP_S0BACKGROUND_COLOR(BV_PXP_S0BACKGROUND_COLOR__##e)
#define BFM_PXP_S0BACKGROUND_COLOR_V(v) BM_PXP_S0BACKGROUND_COLOR

#define HW_PXP_S0CROP               HW(PXP_S0CROP)
#define HWA_PXP_S0CROP              (0x8002a000 + 0xa0)
#define HWT_PXP_S0CROP              HWIO_32_RW
#define HWN_PXP_S0CROP              PXP_S0CROP
#define HWI_PXP_S0CROP              
#define BP_PXP_S0CROP_XBASE         24
#define BM_PXP_S0CROP_XBASE         0xff000000
#define BF_PXP_S0CROP_XBASE(v)      (((v) & 0xff) << 24)
#define BFM_PXP_S0CROP_XBASE(v)     BM_PXP_S0CROP_XBASE
#define BF_PXP_S0CROP_XBASE_V(e)    BF_PXP_S0CROP_XBASE(BV_PXP_S0CROP_XBASE__##e)
#define BFM_PXP_S0CROP_XBASE_V(v)   BM_PXP_S0CROP_XBASE
#define BP_PXP_S0CROP_YBASE         16
#define BM_PXP_S0CROP_YBASE         0xff0000
#define BF_PXP_S0CROP_YBASE(v)      (((v) & 0xff) << 16)
#define BFM_PXP_S0CROP_YBASE(v)     BM_PXP_S0CROP_YBASE
#define BF_PXP_S0CROP_YBASE_V(e)    BF_PXP_S0CROP_YBASE(BV_PXP_S0CROP_YBASE__##e)
#define BFM_PXP_S0CROP_YBASE_V(v)   BM_PXP_S0CROP_YBASE
#define BP_PXP_S0CROP_WIDTH         8
#define BM_PXP_S0CROP_WIDTH         0xff00
#define BF_PXP_S0CROP_WIDTH(v)      (((v) & 0xff) << 8)
#define BFM_PXP_S0CROP_WIDTH(v)     BM_PXP_S0CROP_WIDTH
#define BF_PXP_S0CROP_WIDTH_V(e)    BF_PXP_S0CROP_WIDTH(BV_PXP_S0CROP_WIDTH__##e)
#define BFM_PXP_S0CROP_WIDTH_V(v)   BM_PXP_S0CROP_WIDTH
#define BP_PXP_S0CROP_HEIGHT        0
#define BM_PXP_S0CROP_HEIGHT        0xff
#define BF_PXP_S0CROP_HEIGHT(v)     (((v) & 0xff) << 0)
#define BFM_PXP_S0CROP_HEIGHT(v)    BM_PXP_S0CROP_HEIGHT
#define BF_PXP_S0CROP_HEIGHT_V(e)   BF_PXP_S0CROP_HEIGHT(BV_PXP_S0CROP_HEIGHT__##e)
#define BFM_PXP_S0CROP_HEIGHT_V(v)  BM_PXP_S0CROP_HEIGHT

#define HW_PXP_S0SCALE              HW(PXP_S0SCALE)
#define HWA_PXP_S0SCALE             (0x8002a000 + 0xb0)
#define HWT_PXP_S0SCALE             HWIO_32_RW
#define HWN_PXP_S0SCALE             PXP_S0SCALE
#define HWI_PXP_S0SCALE             
#define BP_PXP_S0SCALE_RSVD2        30
#define BM_PXP_S0SCALE_RSVD2        0xc0000000
#define BF_PXP_S0SCALE_RSVD2(v)     (((v) & 0x3) << 30)
#define BFM_PXP_S0SCALE_RSVD2(v)    BM_PXP_S0SCALE_RSVD2
#define BF_PXP_S0SCALE_RSVD2_V(e)   BF_PXP_S0SCALE_RSVD2(BV_PXP_S0SCALE_RSVD2__##e)
#define BFM_PXP_S0SCALE_RSVD2_V(v)  BM_PXP_S0SCALE_RSVD2
#define BP_PXP_S0SCALE_YSCALE       16
#define BM_PXP_S0SCALE_YSCALE       0x3fff0000
#define BF_PXP_S0SCALE_YSCALE(v)    (((v) & 0x3fff) << 16)
#define BFM_PXP_S0SCALE_YSCALE(v)   BM_PXP_S0SCALE_YSCALE
#define BF_PXP_S0SCALE_YSCALE_V(e)  BF_PXP_S0SCALE_YSCALE(BV_PXP_S0SCALE_YSCALE__##e)
#define BFM_PXP_S0SCALE_YSCALE_V(v) BM_PXP_S0SCALE_YSCALE
#define BP_PXP_S0SCALE_RSVD1        14
#define BM_PXP_S0SCALE_RSVD1        0xc000
#define BF_PXP_S0SCALE_RSVD1(v)     (((v) & 0x3) << 14)
#define BFM_PXP_S0SCALE_RSVD1(v)    BM_PXP_S0SCALE_RSVD1
#define BF_PXP_S0SCALE_RSVD1_V(e)   BF_PXP_S0SCALE_RSVD1(BV_PXP_S0SCALE_RSVD1__##e)
#define BFM_PXP_S0SCALE_RSVD1_V(v)  BM_PXP_S0SCALE_RSVD1
#define BP_PXP_S0SCALE_XSCALE       0
#define BM_PXP_S0SCALE_XSCALE       0x3fff
#define BF_PXP_S0SCALE_XSCALE(v)    (((v) & 0x3fff) << 0)
#define BFM_PXP_S0SCALE_XSCALE(v)   BM_PXP_S0SCALE_XSCALE
#define BF_PXP_S0SCALE_XSCALE_V(e)  BF_PXP_S0SCALE_XSCALE(BV_PXP_S0SCALE_XSCALE__##e)
#define BFM_PXP_S0SCALE_XSCALE_V(v) BM_PXP_S0SCALE_XSCALE

#define HW_PXP_S0OFFSET                 HW(PXP_S0OFFSET)
#define HWA_PXP_S0OFFSET                (0x8002a000 + 0xc0)
#define HWT_PXP_S0OFFSET                HWIO_32_RW
#define HWN_PXP_S0OFFSET                PXP_S0OFFSET
#define HWI_PXP_S0OFFSET                
#define BP_PXP_S0OFFSET_RSVD2           28
#define BM_PXP_S0OFFSET_RSVD2           0xf0000000
#define BF_PXP_S0OFFSET_RSVD2(v)        (((v) & 0xf) << 28)
#define BFM_PXP_S0OFFSET_RSVD2(v)       BM_PXP_S0OFFSET_RSVD2
#define BF_PXP_S0OFFSET_RSVD2_V(e)      BF_PXP_S0OFFSET_RSVD2(BV_PXP_S0OFFSET_RSVD2__##e)
#define BFM_PXP_S0OFFSET_RSVD2_V(v)     BM_PXP_S0OFFSET_RSVD2
#define BP_PXP_S0OFFSET_YOFFSET         16
#define BM_PXP_S0OFFSET_YOFFSET         0xfff0000
#define BF_PXP_S0OFFSET_YOFFSET(v)      (((v) & 0xfff) << 16)
#define BFM_PXP_S0OFFSET_YOFFSET(v)     BM_PXP_S0OFFSET_YOFFSET
#define BF_PXP_S0OFFSET_YOFFSET_V(e)    BF_PXP_S0OFFSET_YOFFSET(BV_PXP_S0OFFSET_YOFFSET__##e)
#define BFM_PXP_S0OFFSET_YOFFSET_V(v)   BM_PXP_S0OFFSET_YOFFSET
#define BP_PXP_S0OFFSET_RSVD1           12
#define BM_PXP_S0OFFSET_RSVD1           0xf000
#define BF_PXP_S0OFFSET_RSVD1(v)        (((v) & 0xf) << 12)
#define BFM_PXP_S0OFFSET_RSVD1(v)       BM_PXP_S0OFFSET_RSVD1
#define BF_PXP_S0OFFSET_RSVD1_V(e)      BF_PXP_S0OFFSET_RSVD1(BV_PXP_S0OFFSET_RSVD1__##e)
#define BFM_PXP_S0OFFSET_RSVD1_V(v)     BM_PXP_S0OFFSET_RSVD1
#define BP_PXP_S0OFFSET_XOFFSET         0
#define BM_PXP_S0OFFSET_XOFFSET         0xfff
#define BF_PXP_S0OFFSET_XOFFSET(v)      (((v) & 0xfff) << 0)
#define BFM_PXP_S0OFFSET_XOFFSET(v)     BM_PXP_S0OFFSET_XOFFSET
#define BF_PXP_S0OFFSET_XOFFSET_V(e)    BF_PXP_S0OFFSET_XOFFSET(BV_PXP_S0OFFSET_XOFFSET__##e)
#define BFM_PXP_S0OFFSET_XOFFSET_V(v)   BM_PXP_S0OFFSET_XOFFSET

#define HW_PXP_CSCCOEFF0                    HW(PXP_CSCCOEFF0)
#define HWA_PXP_CSCCOEFF0                   (0x8002a000 + 0xd0)
#define HWT_PXP_CSCCOEFF0                   HWIO_32_RW
#define HWN_PXP_CSCCOEFF0                   PXP_CSCCOEFF0
#define HWI_PXP_CSCCOEFF0                   
#define BP_PXP_CSCCOEFF0_YCBCR_MODE         31
#define BM_PXP_CSCCOEFF0_YCBCR_MODE         0x80000000
#define BF_PXP_CSCCOEFF0_YCBCR_MODE(v)      (((v) & 0x1) << 31)
#define BFM_PXP_CSCCOEFF0_YCBCR_MODE(v)     BM_PXP_CSCCOEFF0_YCBCR_MODE
#define BF_PXP_CSCCOEFF0_YCBCR_MODE_V(e)    BF_PXP_CSCCOEFF0_YCBCR_MODE(BV_PXP_CSCCOEFF0_YCBCR_MODE__##e)
#define BFM_PXP_CSCCOEFF0_YCBCR_MODE_V(v)   BM_PXP_CSCCOEFF0_YCBCR_MODE
#define BP_PXP_CSCCOEFF0_RSVD1              29
#define BM_PXP_CSCCOEFF0_RSVD1              0x60000000
#define BF_PXP_CSCCOEFF0_RSVD1(v)           (((v) & 0x3) << 29)
#define BFM_PXP_CSCCOEFF0_RSVD1(v)          BM_PXP_CSCCOEFF0_RSVD1
#define BF_PXP_CSCCOEFF0_RSVD1_V(e)         BF_PXP_CSCCOEFF0_RSVD1(BV_PXP_CSCCOEFF0_RSVD1__##e)
#define BFM_PXP_CSCCOEFF0_RSVD1_V(v)        BM_PXP_CSCCOEFF0_RSVD1
#define BP_PXP_CSCCOEFF0_C0                 18
#define BM_PXP_CSCCOEFF0_C0                 0x1ffc0000
#define BF_PXP_CSCCOEFF0_C0(v)              (((v) & 0x7ff) << 18)
#define BFM_PXP_CSCCOEFF0_C0(v)             BM_PXP_CSCCOEFF0_C0
#define BF_PXP_CSCCOEFF0_C0_V(e)            BF_PXP_CSCCOEFF0_C0(BV_PXP_CSCCOEFF0_C0__##e)
#define BFM_PXP_CSCCOEFF0_C0_V(v)           BM_PXP_CSCCOEFF0_C0
#define BP_PXP_CSCCOEFF0_UV_OFFSET          9
#define BM_PXP_CSCCOEFF0_UV_OFFSET          0x3fe00
#define BF_PXP_CSCCOEFF0_UV_OFFSET(v)       (((v) & 0x1ff) << 9)
#define BFM_PXP_CSCCOEFF0_UV_OFFSET(v)      BM_PXP_CSCCOEFF0_UV_OFFSET
#define BF_PXP_CSCCOEFF0_UV_OFFSET_V(e)     BF_PXP_CSCCOEFF0_UV_OFFSET(BV_PXP_CSCCOEFF0_UV_OFFSET__##e)
#define BFM_PXP_CSCCOEFF0_UV_OFFSET_V(v)    BM_PXP_CSCCOEFF0_UV_OFFSET
#define BP_PXP_CSCCOEFF0_Y_OFFSET           0
#define BM_PXP_CSCCOEFF0_Y_OFFSET           0x1ff
#define BF_PXP_CSCCOEFF0_Y_OFFSET(v)        (((v) & 0x1ff) << 0)
#define BFM_PXP_CSCCOEFF0_Y_OFFSET(v)       BM_PXP_CSCCOEFF0_Y_OFFSET
#define BF_PXP_CSCCOEFF0_Y_OFFSET_V(e)      BF_PXP_CSCCOEFF0_Y_OFFSET(BV_PXP_CSCCOEFF0_Y_OFFSET__##e)
#define BFM_PXP_CSCCOEFF0_Y_OFFSET_V(v)     BM_PXP_CSCCOEFF0_Y_OFFSET

#define HW_PXP_CSCCOEFF1                HW(PXP_CSCCOEFF1)
#define HWA_PXP_CSCCOEFF1               (0x8002a000 + 0xe0)
#define HWT_PXP_CSCCOEFF1               HWIO_32_RW
#define HWN_PXP_CSCCOEFF1               PXP_CSCCOEFF1
#define HWI_PXP_CSCCOEFF1               
#define BP_PXP_CSCCOEFF1_RSVD1          27
#define BM_PXP_CSCCOEFF1_RSVD1          0xf8000000
#define BF_PXP_CSCCOEFF1_RSVD1(v)       (((v) & 0x1f) << 27)
#define BFM_PXP_CSCCOEFF1_RSVD1(v)      BM_PXP_CSCCOEFF1_RSVD1
#define BF_PXP_CSCCOEFF1_RSVD1_V(e)     BF_PXP_CSCCOEFF1_RSVD1(BV_PXP_CSCCOEFF1_RSVD1__##e)
#define BFM_PXP_CSCCOEFF1_RSVD1_V(v)    BM_PXP_CSCCOEFF1_RSVD1
#define BP_PXP_CSCCOEFF1_C1             16
#define BM_PXP_CSCCOEFF1_C1             0x7ff0000
#define BF_PXP_CSCCOEFF1_C1(v)          (((v) & 0x7ff) << 16)
#define BFM_PXP_CSCCOEFF1_C1(v)         BM_PXP_CSCCOEFF1_C1
#define BF_PXP_CSCCOEFF1_C1_V(e)        BF_PXP_CSCCOEFF1_C1(BV_PXP_CSCCOEFF1_C1__##e)
#define BFM_PXP_CSCCOEFF1_C1_V(v)       BM_PXP_CSCCOEFF1_C1
#define BP_PXP_CSCCOEFF1_RSVD0          11
#define BM_PXP_CSCCOEFF1_RSVD0          0xf800
#define BF_PXP_CSCCOEFF1_RSVD0(v)       (((v) & 0x1f) << 11)
#define BFM_PXP_CSCCOEFF1_RSVD0(v)      BM_PXP_CSCCOEFF1_RSVD0
#define BF_PXP_CSCCOEFF1_RSVD0_V(e)     BF_PXP_CSCCOEFF1_RSVD0(BV_PXP_CSCCOEFF1_RSVD0__##e)
#define BFM_PXP_CSCCOEFF1_RSVD0_V(v)    BM_PXP_CSCCOEFF1_RSVD0
#define BP_PXP_CSCCOEFF1_C4             0
#define BM_PXP_CSCCOEFF1_C4             0x7ff
#define BF_PXP_CSCCOEFF1_C4(v)          (((v) & 0x7ff) << 0)
#define BFM_PXP_CSCCOEFF1_C4(v)         BM_PXP_CSCCOEFF1_C4
#define BF_PXP_CSCCOEFF1_C4_V(e)        BF_PXP_CSCCOEFF1_C4(BV_PXP_CSCCOEFF1_C4__##e)
#define BFM_PXP_CSCCOEFF1_C4_V(v)       BM_PXP_CSCCOEFF1_C4

#define HW_PXP_CSCCOEFF2                HW(PXP_CSCCOEFF2)
#define HWA_PXP_CSCCOEFF2               (0x8002a000 + 0xf0)
#define HWT_PXP_CSCCOEFF2               HWIO_32_RW
#define HWN_PXP_CSCCOEFF2               PXP_CSCCOEFF2
#define HWI_PXP_CSCCOEFF2               
#define BP_PXP_CSCCOEFF2_RSVD1          27
#define BM_PXP_CSCCOEFF2_RSVD1          0xf8000000
#define BF_PXP_CSCCOEFF2_RSVD1(v)       (((v) & 0x1f) << 27)
#define BFM_PXP_CSCCOEFF2_RSVD1(v)      BM_PXP_CSCCOEFF2_RSVD1
#define BF_PXP_CSCCOEFF2_RSVD1_V(e)     BF_PXP_CSCCOEFF2_RSVD1(BV_PXP_CSCCOEFF2_RSVD1__##e)
#define BFM_PXP_CSCCOEFF2_RSVD1_V(v)    BM_PXP_CSCCOEFF2_RSVD1
#define BP_PXP_CSCCOEFF2_C2             16
#define BM_PXP_CSCCOEFF2_C2             0x7ff0000
#define BF_PXP_CSCCOEFF2_C2(v)          (((v) & 0x7ff) << 16)
#define BFM_PXP_CSCCOEFF2_C2(v)         BM_PXP_CSCCOEFF2_C2
#define BF_PXP_CSCCOEFF2_C2_V(e)        BF_PXP_CSCCOEFF2_C2(BV_PXP_CSCCOEFF2_C2__##e)
#define BFM_PXP_CSCCOEFF2_C2_V(v)       BM_PXP_CSCCOEFF2_C2
#define BP_PXP_CSCCOEFF2_RSVD0          11
#define BM_PXP_CSCCOEFF2_RSVD0          0xf800
#define BF_PXP_CSCCOEFF2_RSVD0(v)       (((v) & 0x1f) << 11)
#define BFM_PXP_CSCCOEFF2_RSVD0(v)      BM_PXP_CSCCOEFF2_RSVD0
#define BF_PXP_CSCCOEFF2_RSVD0_V(e)     BF_PXP_CSCCOEFF2_RSVD0(BV_PXP_CSCCOEFF2_RSVD0__##e)
#define BFM_PXP_CSCCOEFF2_RSVD0_V(v)    BM_PXP_CSCCOEFF2_RSVD0
#define BP_PXP_CSCCOEFF2_C3             0
#define BM_PXP_CSCCOEFF2_C3             0x7ff
#define BF_PXP_CSCCOEFF2_C3(v)          (((v) & 0x7ff) << 0)
#define BFM_PXP_CSCCOEFF2_C3(v)         BM_PXP_CSCCOEFF2_C3
#define BF_PXP_CSCCOEFF2_C3_V(e)        BF_PXP_CSCCOEFF2_C3(BV_PXP_CSCCOEFF2_C3__##e)
#define BFM_PXP_CSCCOEFF2_C3_V(v)       BM_PXP_CSCCOEFF2_C3

#define HW_PXP_NEXT                 HW(PXP_NEXT)
#define HWA_PXP_NEXT                (0x8002a000 + 0x100)
#define HWT_PXP_NEXT                HWIO_32_RW
#define HWN_PXP_NEXT                PXP_NEXT
#define HWI_PXP_NEXT                
#define HW_PXP_NEXT_SET             HW(PXP_NEXT_SET)
#define HWA_PXP_NEXT_SET            (HWA_PXP_NEXT + 0x4)
#define HWT_PXP_NEXT_SET            HWIO_32_WO
#define HWN_PXP_NEXT_SET            PXP_NEXT
#define HWI_PXP_NEXT_SET            
#define HW_PXP_NEXT_CLR             HW(PXP_NEXT_CLR)
#define HWA_PXP_NEXT_CLR            (HWA_PXP_NEXT + 0x8)
#define HWT_PXP_NEXT_CLR            HWIO_32_WO
#define HWN_PXP_NEXT_CLR            PXP_NEXT
#define HWI_PXP_NEXT_CLR            
#define HW_PXP_NEXT_TOG             HW(PXP_NEXT_TOG)
#define HWA_PXP_NEXT_TOG            (HWA_PXP_NEXT + 0xc)
#define HWT_PXP_NEXT_TOG            HWIO_32_WO
#define HWN_PXP_NEXT_TOG            PXP_NEXT
#define HWI_PXP_NEXT_TOG            
#define BP_PXP_NEXT_POINTER         2
#define BM_PXP_NEXT_POINTER         0xfffffffc
#define BF_PXP_NEXT_POINTER(v)      (((v) & 0x3fffffff) << 2)
#define BFM_PXP_NEXT_POINTER(v)     BM_PXP_NEXT_POINTER
#define BF_PXP_NEXT_POINTER_V(e)    BF_PXP_NEXT_POINTER(BV_PXP_NEXT_POINTER__##e)
#define BFM_PXP_NEXT_POINTER_V(v)   BM_PXP_NEXT_POINTER
#define BP_PXP_NEXT_RSVD            1
#define BM_PXP_NEXT_RSVD            0x2
#define BF_PXP_NEXT_RSVD(v)         (((v) & 0x1) << 1)
#define BFM_PXP_NEXT_RSVD(v)        BM_PXP_NEXT_RSVD
#define BF_PXP_NEXT_RSVD_V(e)       BF_PXP_NEXT_RSVD(BV_PXP_NEXT_RSVD__##e)
#define BFM_PXP_NEXT_RSVD_V(v)      BM_PXP_NEXT_RSVD
#define BP_PXP_NEXT_ENABLED         0
#define BM_PXP_NEXT_ENABLED         0x1
#define BF_PXP_NEXT_ENABLED(v)      (((v) & 0x1) << 0)
#define BFM_PXP_NEXT_ENABLED(v)     BM_PXP_NEXT_ENABLED
#define BF_PXP_NEXT_ENABLED_V(e)    BF_PXP_NEXT_ENABLED(BV_PXP_NEXT_ENABLED__##e)
#define BFM_PXP_NEXT_ENABLED_V(v)   BM_PXP_NEXT_ENABLED

#define HW_PXP_PAGETABLE                HW(PXP_PAGETABLE)
#define HWA_PXP_PAGETABLE               (0x8002a000 + 0x170)
#define HWT_PXP_PAGETABLE               HWIO_32_RW
#define HWN_PXP_PAGETABLE               PXP_PAGETABLE
#define HWI_PXP_PAGETABLE               
#define BP_PXP_PAGETABLE_BASE           14
#define BM_PXP_PAGETABLE_BASE           0xffffc000
#define BF_PXP_PAGETABLE_BASE(v)        (((v) & 0x3ffff) << 14)
#define BFM_PXP_PAGETABLE_BASE(v)       BM_PXP_PAGETABLE_BASE
#define BF_PXP_PAGETABLE_BASE_V(e)      BF_PXP_PAGETABLE_BASE(BV_PXP_PAGETABLE_BASE__##e)
#define BFM_PXP_PAGETABLE_BASE_V(v)     BM_PXP_PAGETABLE_BASE
#define BP_PXP_PAGETABLE_RSVD1          2
#define BM_PXP_PAGETABLE_RSVD1          0x3ffc
#define BF_PXP_PAGETABLE_RSVD1(v)       (((v) & 0xfff) << 2)
#define BFM_PXP_PAGETABLE_RSVD1(v)      BM_PXP_PAGETABLE_RSVD1
#define BF_PXP_PAGETABLE_RSVD1_V(e)     BF_PXP_PAGETABLE_RSVD1(BV_PXP_PAGETABLE_RSVD1__##e)
#define BFM_PXP_PAGETABLE_RSVD1_V(v)    BM_PXP_PAGETABLE_RSVD1
#define BP_PXP_PAGETABLE_FLUSH          1
#define BM_PXP_PAGETABLE_FLUSH          0x2
#define BF_PXP_PAGETABLE_FLUSH(v)       (((v) & 0x1) << 1)
#define BFM_PXP_PAGETABLE_FLUSH(v)      BM_PXP_PAGETABLE_FLUSH
#define BF_PXP_PAGETABLE_FLUSH_V(e)     BF_PXP_PAGETABLE_FLUSH(BV_PXP_PAGETABLE_FLUSH__##e)
#define BFM_PXP_PAGETABLE_FLUSH_V(v)    BM_PXP_PAGETABLE_FLUSH
#define BP_PXP_PAGETABLE_ENABLE         0
#define BM_PXP_PAGETABLE_ENABLE         0x1
#define BF_PXP_PAGETABLE_ENABLE(v)      (((v) & 0x1) << 0)
#define BFM_PXP_PAGETABLE_ENABLE(v)     BM_PXP_PAGETABLE_ENABLE
#define BF_PXP_PAGETABLE_ENABLE_V(e)    BF_PXP_PAGETABLE_ENABLE(BV_PXP_PAGETABLE_ENABLE__##e)
#define BFM_PXP_PAGETABLE_ENABLE_V(v)   BM_PXP_PAGETABLE_ENABLE

#define HW_PXP_S0COLORKEYLOW                HW(PXP_S0COLORKEYLOW)
#define HWA_PXP_S0COLORKEYLOW               (0x8002a000 + 0x180)
#define HWT_PXP_S0COLORKEYLOW               HWIO_32_RW
#define HWN_PXP_S0COLORKEYLOW               PXP_S0COLORKEYLOW
#define HWI_PXP_S0COLORKEYLOW               
#define BP_PXP_S0COLORKEYLOW_RSVD1          24
#define BM_PXP_S0COLORKEYLOW_RSVD1          0xff000000
#define BF_PXP_S0COLORKEYLOW_RSVD1(v)       (((v) & 0xff) << 24)
#define BFM_PXP_S0COLORKEYLOW_RSVD1(v)      BM_PXP_S0COLORKEYLOW_RSVD1
#define BF_PXP_S0COLORKEYLOW_RSVD1_V(e)     BF_PXP_S0COLORKEYLOW_RSVD1(BV_PXP_S0COLORKEYLOW_RSVD1__##e)
#define BFM_PXP_S0COLORKEYLOW_RSVD1_V(v)    BM_PXP_S0COLORKEYLOW_RSVD1
#define BP_PXP_S0COLORKEYLOW_PIXEL          0
#define BM_PXP_S0COLORKEYLOW_PIXEL          0xffffff
#define BF_PXP_S0COLORKEYLOW_PIXEL(v)       (((v) & 0xffffff) << 0)
#define BFM_PXP_S0COLORKEYLOW_PIXEL(v)      BM_PXP_S0COLORKEYLOW_PIXEL
#define BF_PXP_S0COLORKEYLOW_PIXEL_V(e)     BF_PXP_S0COLORKEYLOW_PIXEL(BV_PXP_S0COLORKEYLOW_PIXEL__##e)
#define BFM_PXP_S0COLORKEYLOW_PIXEL_V(v)    BM_PXP_S0COLORKEYLOW_PIXEL

#define HW_PXP_S0COLORKEYHIGH               HW(PXP_S0COLORKEYHIGH)
#define HWA_PXP_S0COLORKEYHIGH              (0x8002a000 + 0x190)
#define HWT_PXP_S0COLORKEYHIGH              HWIO_32_RW
#define HWN_PXP_S0COLORKEYHIGH              PXP_S0COLORKEYHIGH
#define HWI_PXP_S0COLORKEYHIGH              
#define BP_PXP_S0COLORKEYHIGH_RSVD1         24
#define BM_PXP_S0COLORKEYHIGH_RSVD1         0xff000000
#define BF_PXP_S0COLORKEYHIGH_RSVD1(v)      (((v) & 0xff) << 24)
#define BFM_PXP_S0COLORKEYHIGH_RSVD1(v)     BM_PXP_S0COLORKEYHIGH_RSVD1
#define BF_PXP_S0COLORKEYHIGH_RSVD1_V(e)    BF_PXP_S0COLORKEYHIGH_RSVD1(BV_PXP_S0COLORKEYHIGH_RSVD1__##e)
#define BFM_PXP_S0COLORKEYHIGH_RSVD1_V(v)   BM_PXP_S0COLORKEYHIGH_RSVD1
#define BP_PXP_S0COLORKEYHIGH_PIXEL         0
#define BM_PXP_S0COLORKEYHIGH_PIXEL         0xffffff
#define BF_PXP_S0COLORKEYHIGH_PIXEL(v)      (((v) & 0xffffff) << 0)
#define BFM_PXP_S0COLORKEYHIGH_PIXEL(v)     BM_PXP_S0COLORKEYHIGH_PIXEL
#define BF_PXP_S0COLORKEYHIGH_PIXEL_V(e)    BF_PXP_S0COLORKEYHIGH_PIXEL(BV_PXP_S0COLORKEYHIGH_PIXEL__##e)
#define BFM_PXP_S0COLORKEYHIGH_PIXEL_V(v)   BM_PXP_S0COLORKEYHIGH_PIXEL

#define HW_PXP_OLCOLORKEYLOW                HW(PXP_OLCOLORKEYLOW)
#define HWA_PXP_OLCOLORKEYLOW               (0x8002a000 + 0x1a0)
#define HWT_PXP_OLCOLORKEYLOW               HWIO_32_RW
#define HWN_PXP_OLCOLORKEYLOW               PXP_OLCOLORKEYLOW
#define HWI_PXP_OLCOLORKEYLOW               
#define BP_PXP_OLCOLORKEYLOW_RSVD1          24
#define BM_PXP_OLCOLORKEYLOW_RSVD1          0xff000000
#define BF_PXP_OLCOLORKEYLOW_RSVD1(v)       (((v) & 0xff) << 24)
#define BFM_PXP_OLCOLORKEYLOW_RSVD1(v)      BM_PXP_OLCOLORKEYLOW_RSVD1
#define BF_PXP_OLCOLORKEYLOW_RSVD1_V(e)     BF_PXP_OLCOLORKEYLOW_RSVD1(BV_PXP_OLCOLORKEYLOW_RSVD1__##e)
#define BFM_PXP_OLCOLORKEYLOW_RSVD1_V(v)    BM_PXP_OLCOLORKEYLOW_RSVD1
#define BP_PXP_OLCOLORKEYLOW_PIXEL          0
#define BM_PXP_OLCOLORKEYLOW_PIXEL          0xffffff
#define BF_PXP_OLCOLORKEYLOW_PIXEL(v)       (((v) & 0xffffff) << 0)
#define BFM_PXP_OLCOLORKEYLOW_PIXEL(v)      BM_PXP_OLCOLORKEYLOW_PIXEL
#define BF_PXP_OLCOLORKEYLOW_PIXEL_V(e)     BF_PXP_OLCOLORKEYLOW_PIXEL(BV_PXP_OLCOLORKEYLOW_PIXEL__##e)
#define BFM_PXP_OLCOLORKEYLOW_PIXEL_V(v)    BM_PXP_OLCOLORKEYLOW_PIXEL

#define HW_PXP_OLCOLORKEYHIGH               HW(PXP_OLCOLORKEYHIGH)
#define HWA_PXP_OLCOLORKEYHIGH              (0x8002a000 + 0x1b0)
#define HWT_PXP_OLCOLORKEYHIGH              HWIO_32_RW
#define HWN_PXP_OLCOLORKEYHIGH              PXP_OLCOLORKEYHIGH
#define HWI_PXP_OLCOLORKEYHIGH              
#define BP_PXP_OLCOLORKEYHIGH_RSVD1         24
#define BM_PXP_OLCOLORKEYHIGH_RSVD1         0xff000000
#define BF_PXP_OLCOLORKEYHIGH_RSVD1(v)      (((v) & 0xff) << 24)
#define BFM_PXP_OLCOLORKEYHIGH_RSVD1(v)     BM_PXP_OLCOLORKEYHIGH_RSVD1
#define BF_PXP_OLCOLORKEYHIGH_RSVD1_V(e)    BF_PXP_OLCOLORKEYHIGH_RSVD1(BV_PXP_OLCOLORKEYHIGH_RSVD1__##e)
#define BFM_PXP_OLCOLORKEYHIGH_RSVD1_V(v)   BM_PXP_OLCOLORKEYHIGH_RSVD1
#define BP_PXP_OLCOLORKEYHIGH_PIXEL         0
#define BM_PXP_OLCOLORKEYHIGH_PIXEL         0xffffff
#define BF_PXP_OLCOLORKEYHIGH_PIXEL(v)      (((v) & 0xffffff) << 0)
#define BFM_PXP_OLCOLORKEYHIGH_PIXEL(v)     BM_PXP_OLCOLORKEYHIGH_PIXEL
#define BF_PXP_OLCOLORKEYHIGH_PIXEL_V(e)    BF_PXP_OLCOLORKEYHIGH_PIXEL(BV_PXP_OLCOLORKEYHIGH_PIXEL__##e)
#define BFM_PXP_OLCOLORKEYHIGH_PIXEL_V(v)   BM_PXP_OLCOLORKEYHIGH_PIXEL

#define HW_PXP_DEBUGCTRL                        HW(PXP_DEBUGCTRL)
#define HWA_PXP_DEBUGCTRL                       (0x8002a000 + 0x1d0)
#define HWT_PXP_DEBUGCTRL                       HWIO_32_RW
#define HWN_PXP_DEBUGCTRL                       PXP_DEBUGCTRL
#define HWI_PXP_DEBUGCTRL                       
#define BP_PXP_DEBUGCTRL_RSVD                   9
#define BM_PXP_DEBUGCTRL_RSVD                   0xfffffe00
#define BF_PXP_DEBUGCTRL_RSVD(v)                (((v) & 0x7fffff) << 9)
#define BFM_PXP_DEBUGCTRL_RSVD(v)               BM_PXP_DEBUGCTRL_RSVD
#define BF_PXP_DEBUGCTRL_RSVD_V(e)              BF_PXP_DEBUGCTRL_RSVD(BV_PXP_DEBUGCTRL_RSVD__##e)
#define BFM_PXP_DEBUGCTRL_RSVD_V(v)             BM_PXP_DEBUGCTRL_RSVD
#define BP_PXP_DEBUGCTRL_RESET_TLB_STATS        8
#define BM_PXP_DEBUGCTRL_RESET_TLB_STATS        0x100
#define BF_PXP_DEBUGCTRL_RESET_TLB_STATS(v)     (((v) & 0x1) << 8)
#define BFM_PXP_DEBUGCTRL_RESET_TLB_STATS(v)    BM_PXP_DEBUGCTRL_RESET_TLB_STATS
#define BF_PXP_DEBUGCTRL_RESET_TLB_STATS_V(e)   BF_PXP_DEBUGCTRL_RESET_TLB_STATS(BV_PXP_DEBUGCTRL_RESET_TLB_STATS__##e)
#define BFM_PXP_DEBUGCTRL_RESET_TLB_STATS_V(v)  BM_PXP_DEBUGCTRL_RESET_TLB_STATS
#define BP_PXP_DEBUGCTRL_SELECT                 0
#define BM_PXP_DEBUGCTRL_SELECT                 0xff
#define BV_PXP_DEBUGCTRL_SELECT__NONE           0x0
#define BV_PXP_DEBUGCTRL_SELECT__CTRL           0x1
#define BV_PXP_DEBUGCTRL_SELECT__S0REGS         0x2
#define BV_PXP_DEBUGCTRL_SELECT__S0BAX          0x3
#define BV_PXP_DEBUGCTRL_SELECT__S0BAY          0x4
#define BV_PXP_DEBUGCTRL_SELECT__PXBUF          0x5
#define BV_PXP_DEBUGCTRL_SELECT__ROTATION       0x6
#define BV_PXP_DEBUGCTRL_SELECT__ROTBUF0        0x7
#define BV_PXP_DEBUGCTRL_SELECT__ROTBUF1        0x8
#define BF_PXP_DEBUGCTRL_SELECT(v)              (((v) & 0xff) << 0)
#define BFM_PXP_DEBUGCTRL_SELECT(v)             BM_PXP_DEBUGCTRL_SELECT
#define BF_PXP_DEBUGCTRL_SELECT_V(e)            BF_PXP_DEBUGCTRL_SELECT(BV_PXP_DEBUGCTRL_SELECT__##e)
#define BFM_PXP_DEBUGCTRL_SELECT_V(v)           BM_PXP_DEBUGCTRL_SELECT

#define HW_PXP_DEBUG            HW(PXP_DEBUG)
#define HWA_PXP_DEBUG           (0x8002a000 + 0x1e0)
#define HWT_PXP_DEBUG           HWIO_32_RW
#define HWN_PXP_DEBUG           PXP_DEBUG
#define HWI_PXP_DEBUG           
#define BP_PXP_DEBUG_DATA       0
#define BM_PXP_DEBUG_DATA       0xffffffff
#define BF_PXP_DEBUG_DATA(v)    (((v) & 0xffffffff) << 0)
#define BFM_PXP_DEBUG_DATA(v)   BM_PXP_DEBUG_DATA
#define BF_PXP_DEBUG_DATA_V(e)  BF_PXP_DEBUG_DATA(BV_PXP_DEBUG_DATA__##e)
#define BFM_PXP_DEBUG_DATA_V(v) BM_PXP_DEBUG_DATA

#define HW_PXP_VERSION              HW(PXP_VERSION)
#define HWA_PXP_VERSION             (0x8002a000 + 0x1f0)
#define HWT_PXP_VERSION             HWIO_32_RW
#define HWN_PXP_VERSION             PXP_VERSION
#define HWI_PXP_VERSION             
#define BP_PXP_VERSION_MAJOR        24
#define BM_PXP_VERSION_MAJOR        0xff000000
#define BF_PXP_VERSION_MAJOR(v)     (((v) & 0xff) << 24)
#define BFM_PXP_VERSION_MAJOR(v)    BM_PXP_VERSION_MAJOR
#define BF_PXP_VERSION_MAJOR_V(e)   BF_PXP_VERSION_MAJOR(BV_PXP_VERSION_MAJOR__##e)
#define BFM_PXP_VERSION_MAJOR_V(v)  BM_PXP_VERSION_MAJOR
#define BP_PXP_VERSION_MINOR        16
#define BM_PXP_VERSION_MINOR        0xff0000
#define BF_PXP_VERSION_MINOR(v)     (((v) & 0xff) << 16)
#define BFM_PXP_VERSION_MINOR(v)    BM_PXP_VERSION_MINOR
#define BF_PXP_VERSION_MINOR_V(e)   BF_PXP_VERSION_MINOR(BV_PXP_VERSION_MINOR__##e)
#define BFM_PXP_VERSION_MINOR_V(v)  BM_PXP_VERSION_MINOR
#define BP_PXP_VERSION_STEP         0
#define BM_PXP_VERSION_STEP         0xffff
#define BF_PXP_VERSION_STEP(v)      (((v) & 0xffff) << 0)
#define BFM_PXP_VERSION_STEP(v)     BM_PXP_VERSION_STEP
#define BF_PXP_VERSION_STEP_V(e)    BF_PXP_VERSION_STEP(BV_PXP_VERSION_STEP__##e)
#define BFM_PXP_VERSION_STEP_V(v)   BM_PXP_VERSION_STEP

#define HW_PXP_OLn(_n1)         HW(PXP_OLn(_n1))
#define HWA_PXP_OLn(_n1)        (0x8002a000 + 0x200 + (_n1) * 0x40)
#define HWT_PXP_OLn(_n1)        HWIO_32_RW
#define HWN_PXP_OLn(_n1)        PXP_OLn
#define HWI_PXP_OLn(_n1)        (_n1)
#define BP_PXP_OLn_ADDR         0
#define BM_PXP_OLn_ADDR         0xffffffff
#define BF_PXP_OLn_ADDR(v)      (((v) & 0xffffffff) << 0)
#define BFM_PXP_OLn_ADDR(v)     BM_PXP_OLn_ADDR
#define BF_PXP_OLn_ADDR_V(e)    BF_PXP_OLn_ADDR(BV_PXP_OLn_ADDR__##e)
#define BFM_PXP_OLn_ADDR_V(v)   BM_PXP_OLn_ADDR

#define HW_PXP_OLnSIZE(_n1)         HW(PXP_OLnSIZE(_n1))
#define HWA_PXP_OLnSIZE(_n1)        (0x8002a000 + 0x210 + (_n1) * 0x40)
#define HWT_PXP_OLnSIZE(_n1)        HWIO_32_RW
#define HWN_PXP_OLnSIZE(_n1)        PXP_OLnSIZE
#define HWI_PXP_OLnSIZE(_n1)        (_n1)
#define BP_PXP_OLnSIZE_XBASE        24
#define BM_PXP_OLnSIZE_XBASE        0xff000000
#define BF_PXP_OLnSIZE_XBASE(v)     (((v) & 0xff) << 24)
#define BFM_PXP_OLnSIZE_XBASE(v)    BM_PXP_OLnSIZE_XBASE
#define BF_PXP_OLnSIZE_XBASE_V(e)   BF_PXP_OLnSIZE_XBASE(BV_PXP_OLnSIZE_XBASE__##e)
#define BFM_PXP_OLnSIZE_XBASE_V(v)  BM_PXP_OLnSIZE_XBASE
#define BP_PXP_OLnSIZE_YBASE        16
#define BM_PXP_OLnSIZE_YBASE        0xff0000
#define BF_PXP_OLnSIZE_YBASE(v)     (((v) & 0xff) << 16)
#define BFM_PXP_OLnSIZE_YBASE(v)    BM_PXP_OLnSIZE_YBASE
#define BF_PXP_OLnSIZE_YBASE_V(e)   BF_PXP_OLnSIZE_YBASE(BV_PXP_OLnSIZE_YBASE__##e)
#define BFM_PXP_OLnSIZE_YBASE_V(v)  BM_PXP_OLnSIZE_YBASE
#define BP_PXP_OLnSIZE_WIDTH        8
#define BM_PXP_OLnSIZE_WIDTH        0xff00
#define BF_PXP_OLnSIZE_WIDTH(v)     (((v) & 0xff) << 8)
#define BFM_PXP_OLnSIZE_WIDTH(v)    BM_PXP_OLnSIZE_WIDTH
#define BF_PXP_OLnSIZE_WIDTH_V(e)   BF_PXP_OLnSIZE_WIDTH(BV_PXP_OLnSIZE_WIDTH__##e)
#define BFM_PXP_OLnSIZE_WIDTH_V(v)  BM_PXP_OLnSIZE_WIDTH
#define BP_PXP_OLnSIZE_HEIGHT       0
#define BM_PXP_OLnSIZE_HEIGHT       0xff
#define BF_PXP_OLnSIZE_HEIGHT(v)    (((v) & 0xff) << 0)
#define BFM_PXP_OLnSIZE_HEIGHT(v)   BM_PXP_OLnSIZE_HEIGHT
#define BF_PXP_OLnSIZE_HEIGHT_V(e)  BF_PXP_OLnSIZE_HEIGHT(BV_PXP_OLnSIZE_HEIGHT__##e)
#define BFM_PXP_OLnSIZE_HEIGHT_V(v) BM_PXP_OLnSIZE_HEIGHT

#define HW_PXP_OLnPARAM(_n1)                    HW(PXP_OLnPARAM(_n1))
#define HWA_PXP_OLnPARAM(_n1)                   (0x8002a000 + 0x220 + (_n1) * 0x40)
#define HWT_PXP_OLnPARAM(_n1)                   HWIO_32_RW
#define HWN_PXP_OLnPARAM(_n1)                   PXP_OLnPARAM
#define HWI_PXP_OLnPARAM(_n1)                   (_n1)
#define BP_PXP_OLnPARAM_RSVD1                   20
#define BM_PXP_OLnPARAM_RSVD1                   0xfff00000
#define BF_PXP_OLnPARAM_RSVD1(v)                (((v) & 0xfff) << 20)
#define BFM_PXP_OLnPARAM_RSVD1(v)               BM_PXP_OLnPARAM_RSVD1
#define BF_PXP_OLnPARAM_RSVD1_V(e)              BF_PXP_OLnPARAM_RSVD1(BV_PXP_OLnPARAM_RSVD1__##e)
#define BFM_PXP_OLnPARAM_RSVD1_V(v)             BM_PXP_OLnPARAM_RSVD1
#define BP_PXP_OLnPARAM_ROP                     16
#define BM_PXP_OLnPARAM_ROP                     0xf0000
#define BV_PXP_OLnPARAM_ROP__MASKOL             0x0
#define BV_PXP_OLnPARAM_ROP__MASKNOTOL          0x1
#define BV_PXP_OLnPARAM_ROP__MASKOLNOT          0x2
#define BV_PXP_OLnPARAM_ROP__MERGEOL            0x3
#define BV_PXP_OLnPARAM_ROP__MERGENOTOL         0x4
#define BV_PXP_OLnPARAM_ROP__MERGEOLNOT         0x5
#define BV_PXP_OLnPARAM_ROP__NOTCOPYOL          0x6
#define BV_PXP_OLnPARAM_ROP__NOT                0x7
#define BV_PXP_OLnPARAM_ROP__NOTMASKOL          0x8
#define BV_PXP_OLnPARAM_ROP__NOTMERGEOL         0x9
#define BV_PXP_OLnPARAM_ROP__XOROL              0xa
#define BV_PXP_OLnPARAM_ROP__NOTXOROL           0xb
#define BF_PXP_OLnPARAM_ROP(v)                  (((v) & 0xf) << 16)
#define BFM_PXP_OLnPARAM_ROP(v)                 BM_PXP_OLnPARAM_ROP
#define BF_PXP_OLnPARAM_ROP_V(e)                BF_PXP_OLnPARAM_ROP(BV_PXP_OLnPARAM_ROP__##e)
#define BFM_PXP_OLnPARAM_ROP_V(v)               BM_PXP_OLnPARAM_ROP
#define BP_PXP_OLnPARAM_ALPHA                   8
#define BM_PXP_OLnPARAM_ALPHA                   0xff00
#define BF_PXP_OLnPARAM_ALPHA(v)                (((v) & 0xff) << 8)
#define BFM_PXP_OLnPARAM_ALPHA(v)               BM_PXP_OLnPARAM_ALPHA
#define BF_PXP_OLnPARAM_ALPHA_V(e)              BF_PXP_OLnPARAM_ALPHA(BV_PXP_OLnPARAM_ALPHA__##e)
#define BFM_PXP_OLnPARAM_ALPHA_V(v)             BM_PXP_OLnPARAM_ALPHA
#define BP_PXP_OLnPARAM_FORMAT                  4
#define BM_PXP_OLnPARAM_FORMAT                  0xf0
#define BV_PXP_OLnPARAM_FORMAT__ARGB8888        0x0
#define BV_PXP_OLnPARAM_FORMAT__RGB888          0x1
#define BV_PXP_OLnPARAM_FORMAT__ARGB1555        0x3
#define BV_PXP_OLnPARAM_FORMAT__RGB565          0x4
#define BV_PXP_OLnPARAM_FORMAT__RGB555          0x5
#define BF_PXP_OLnPARAM_FORMAT(v)               (((v) & 0xf) << 4)
#define BFM_PXP_OLnPARAM_FORMAT(v)              BM_PXP_OLnPARAM_FORMAT
#define BF_PXP_OLnPARAM_FORMAT_V(e)             BF_PXP_OLnPARAM_FORMAT(BV_PXP_OLnPARAM_FORMAT__##e)
#define BFM_PXP_OLnPARAM_FORMAT_V(v)            BM_PXP_OLnPARAM_FORMAT
#define BP_PXP_OLnPARAM_ENABLE_COLORKEY         3
#define BM_PXP_OLnPARAM_ENABLE_COLORKEY         0x8
#define BF_PXP_OLnPARAM_ENABLE_COLORKEY(v)      (((v) & 0x1) << 3)
#define BFM_PXP_OLnPARAM_ENABLE_COLORKEY(v)     BM_PXP_OLnPARAM_ENABLE_COLORKEY
#define BF_PXP_OLnPARAM_ENABLE_COLORKEY_V(e)    BF_PXP_OLnPARAM_ENABLE_COLORKEY(BV_PXP_OLnPARAM_ENABLE_COLORKEY__##e)
#define BFM_PXP_OLnPARAM_ENABLE_COLORKEY_V(v)   BM_PXP_OLnPARAM_ENABLE_COLORKEY
#define BP_PXP_OLnPARAM_ALPHA_CNTL              1
#define BM_PXP_OLnPARAM_ALPHA_CNTL              0x6
#define BV_PXP_OLnPARAM_ALPHA_CNTL__Embedded    0x0
#define BV_PXP_OLnPARAM_ALPHA_CNTL__Override    0x1
#define BV_PXP_OLnPARAM_ALPHA_CNTL__Multiply    0x2
#define BV_PXP_OLnPARAM_ALPHA_CNTL__ROPs        0x3
#define BF_PXP_OLnPARAM_ALPHA_CNTL(v)           (((v) & 0x3) << 1)
#define BFM_PXP_OLnPARAM_ALPHA_CNTL(v)          BM_PXP_OLnPARAM_ALPHA_CNTL
#define BF_PXP_OLnPARAM_ALPHA_CNTL_V(e)         BF_PXP_OLnPARAM_ALPHA_CNTL(BV_PXP_OLnPARAM_ALPHA_CNTL__##e)
#define BFM_PXP_OLnPARAM_ALPHA_CNTL_V(v)        BM_PXP_OLnPARAM_ALPHA_CNTL
#define BP_PXP_OLnPARAM_ENABLE                  0
#define BM_PXP_OLnPARAM_ENABLE                  0x1
#define BF_PXP_OLnPARAM_ENABLE(v)               (((v) & 0x1) << 0)
#define BFM_PXP_OLnPARAM_ENABLE(v)              BM_PXP_OLnPARAM_ENABLE
#define BF_PXP_OLnPARAM_ENABLE_V(e)             BF_PXP_OLnPARAM_ENABLE(BV_PXP_OLnPARAM_ENABLE__##e)
#define BFM_PXP_OLnPARAM_ENABLE_V(v)            BM_PXP_OLnPARAM_ENABLE

#define HW_PXP_OLnPARAM2(_n1)       HW(PXP_OLnPARAM2(_n1))
#define HWA_PXP_OLnPARAM2(_n1)      (0x8002a000 + 0x230 + (_n1) * 0x40)
#define HWT_PXP_OLnPARAM2(_n1)      HWIO_32_RW
#define HWN_PXP_OLnPARAM2(_n1)      PXP_OLnPARAM2
#define HWI_PXP_OLnPARAM2(_n1)      (_n1)
#define BP_PXP_OLnPARAM2_RSVD       0
#define BM_PXP_OLnPARAM2_RSVD       0xffffffff
#define BF_PXP_OLnPARAM2_RSVD(v)    (((v) & 0xffffffff) << 0)
#define BFM_PXP_OLnPARAM2_RSVD(v)   BM_PXP_OLnPARAM2_RSVD
#define BF_PXP_OLnPARAM2_RSVD_V(e)  BF_PXP_OLnPARAM2_RSVD(BV_PXP_OLnPARAM2_RSVD__##e)
#define BFM_PXP_OLnPARAM2_RSVD_V(v) BM_PXP_OLnPARAM2_RSVD

#endif /* __HEADERGEN_IMX233_PXP_H__*/
